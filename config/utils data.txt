# IBG control strategy - 4 characters
controles = [('0.00','0.00','IBAL'),
             ('-1.0','1.00','PCON'),
             ('1.00','-1.0','QCON')]  


# List of short circuit impedances (Iso - Gr) & 4 characters'''
impedancias = [('  .1', '1.E7', '1.E7', 'Ag_.1', 'Gr'),
               ('  1.', '1.E7', '1.E7', 'Ag_1 ', 'Gr'),
               ('  5.', '1.E7', '1.E7', 'Ag_5 ', 'Gr'),
               (' 10.', '1.E7', '1.E7', 'Ag_10', 'Gr'),
               (' 20.', '1.E7', '1.E7', 'Ag_20', 'Gr'),

               ('  .1', '  .1', '1.E7', 'ABg_.2', 'Gr'),
               ('  .5', '  .5', '1.E7', 'ABg_1 ', 'Gr'),
               (' 2.5', ' 2.5', '1.E7', 'ABg_5 ', 'Gr'),
               ('  5.', '  5.', '1.E7', 'ABg_10', 'Gr'),
               (' 10.', ' 10.', '1.E7', 'ABg_20', 'Gr'),

               ('  .1', '  .1', '1.E7', 'AB_.2', 'Iso'),
               ('  .5', '  .5', '1.E7', 'AB_1 ', 'Iso'),
               (' 2.5', ' 2.5', '1.E7', 'AB_5 ', 'Iso'),
               ('  5.', '  5.', '1.E7', 'AB_10', 'Iso'),
               (' 10.', ' 10.', '1.E7', 'AB_20', 'Iso'),

               ('  .1', '  .1', '  .1', 'ABC_.1', 'Iso'),
               ('  1.', '  1.', '  1.', 'ABC_1 ', 'Iso'),
               ('  5.', '  5.', '  5.', 'ABC_5 ', 'Iso'),
               (' 10.', ' 10.', ' 10.', 'ABC_10', 'Iso'),
               (' 20.', ' 20.', ' 20.', 'ABC_20', 'Iso')]  
			   
			   
## Para Generar diferentes combinaciones de Kp & Kq

Kp = ["-1.0","-0.8","-0.6","-0.4","-0.2","0.00","0.20","0.40","0.60","0.80","1.00"]
Kq = ["-1.0","-0.8","-0.6","-0.4","-0.2","0.00","0.20","0.40","0.60","0.80","1.00"]

controls = []
index = 0
for i in range(len(Kp)):
    for j in range(len(Kq)):
        index =+ 1
        controls.append((Kp[i], Kq[j],"C" + str(index) + "(Kp" + Kp[i] + "Kq" + Kq[j] + ")"))